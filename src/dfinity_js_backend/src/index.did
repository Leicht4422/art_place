service: (record {auctionFee:nat64}) -> {
    addProduct: (record {name:text; photoURL:text; price:nat64; location:text}) -> (variant {Ok:record {id:text; weight:nat64; streering:text; engine_size:text; mileage:nat64; model_code:text; soldAmount:nat64; fuel:text; name:text; color:text; year:text; photoURL:text; seller:principal; crsrvedto:opt principal; price:nat64; is_reserved:bool; location:text}; Err:variant {Reserved:text; PaymentFailed:text; InvalidPayload:text; NotReserved:text; NotFound:text; PaymentCompleted:text}});
    completePurchase: (principal, text, nat64, nat64, nat64) -> (variant {Ok:record {status:variant {PaymentPending:text; Completed:text}; memo:nat64; productId:text; seller:principal; price:nat64; paid_at_block:opt nat64}; Err:variant {Reserved:text; PaymentFailed:text; InvalidPayload:text; NotReserved:text; NotFound:text; PaymentCompleted:text}});
    createOrder: (text) -> (variant {Ok:record {status:variant {PaymentPending:text; Completed:text}; memo:nat64; productId:text; seller:principal; price:nat64; paid_at_block:opt nat64}; Err:variant {Reserved:text; PaymentFailed:text; InvalidPayload:text; NotReserved:text; NotFound:text; PaymentCompleted:text}});
    deleteProduct: (text) -> (variant {Ok:text; Err:variant {Reserved:text; PaymentFailed:text; InvalidPayload:text; NotReserved:text; NotFound:text; PaymentCompleted:text}});
    getAddressFromPrincipal: (principal) -> (text) query;
    getOrders: () -> (vec record {status:variant {PaymentPending:text; Completed:text}; memo:nat64; productId:text; seller:principal; price:nat64; paid_at_block:opt nat64}) query;
    getPendingOrders: () -> (vec record {status:variant {PaymentPending:text; Completed:text}; memo:nat64; productId:text; seller:principal; price:nat64; paid_at_block:opt nat64}) query;
    getProduct: (text) -> (variant {Ok:record {id:text; weight:nat64; streering:text; engine_size:text; mileage:nat64; model_code:text; soldAmount:nat64; fuel:text; name:text; color:text; year:text; photoURL:text; seller:principal; crsrvedto:opt principal; price:nat64; is_reserved:bool; location:text}; Err:variant {Reserved:text; PaymentFailed:text; InvalidPayload:text; NotReserved:text; NotFound:text; PaymentCompleted:text}}) query;
    getProducts: () -> (vec record {id:text; weight:nat64; streering:text; engine_size:text; mileage:nat64; model_code:text; soldAmount:nat64; fuel:text; name:text; color:text; year:text; photoURL:text; seller:principal; crsrvedto:opt principal; price:nat64; is_reserved:bool; location:text}) query;
    makePayment: (text, nat64) -> (variant {Ok:variant {Reserved:text; PaymentFailed:text; InvalidPayload:text; NotReserved:text; NotFound:text; PaymentCompleted:text}; Err:variant {Reserved:text; PaymentFailed:text; InvalidPayload:text; NotReserved:text; NotFound:text; PaymentCompleted:text}});
    updateProduct: (record {id:text; weight:nat64; streering:text; engine_size:text; mileage:nat64; model_code:text; soldAmount:nat64; fuel:text; name:text; color:text; year:text; photoURL:text; seller:principal; crsrvedto:opt principal; price:nat64; is_reserved:bool; location:text}) -> (variant {Ok:record {id:text; weight:nat64; streering:text; engine_size:text; mileage:nat64; model_code:text; soldAmount:nat64; fuel:text; name:text; color:text; year:text; photoURL:text; seller:principal; crsrvedto:opt principal; price:nat64; is_reserved:bool; location:text}; Err:variant {Reserved:text; PaymentFailed:text; InvalidPayload:text; NotReserved:text; NotFound:text; PaymentCompleted:text}});
    verifyPayment: (principal, nat64, nat64, nat64) -> (bool) query;
}
